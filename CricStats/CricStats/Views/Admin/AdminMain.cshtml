
@{
    ViewBag.Title = "AdminMain";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var controllerName = this.ViewContext.RouteData.Values["controller"].ToString();
}

<h1 class="pagetitlemargin">Stats Update</h1>

<h2> Player</h2>

<form>

    <div class="form-group">
        <label> Player Name: </label> <input type="text" id="playerName" name="playerName" placeholder="Player Full Name" />
        <input type="number" id="PlayerId" name="PlayerId" value=0 hidden required />
    </div>

    <button type="submit" class="btn btn-primary" name="btnSavePlayer" id="btnSavePlayer"> Submit </button>
    <button class="btn btn-warning" name="statsClear"> Clear </button>
    <button type="button" class="btn btn-info" data-toggle="modal" data-backdrop="static"  data-target="#managePlayers" id="mngPlayer">
        Manage Player
    </button>

</form>


<!-- Modal -->
<div class="modal fade" id="managePlayers" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="modalPlayerList">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal Player</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table id="dataTableManagePlayer" data-url="@Url.Action("getPlayers", controllerName)">
                    <thead class="datatable-Header">
                        <tr>
                            <td>
                                PlayerId
                            </td>
                            <td>
                                PlayerName
                            </td>
                            <td></td>
                            <td></td>

                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>

                    </tbody>

                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>

        @*edit modal*@
        <div class="modal-content" id="modalPlayerEdit" hidden>
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Edit Player</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input id="editPlayerId" type="hidden" />
                <label>Player Name: </label><input id="editPlayerName" type="text" />
            </div>
            <div class="modal-footer">

                <button type="submit" class="btn btn-primary" name="btnEditSavePlayer" id="btnEditSavePlayer"> Save </button>
                <button type="button" class="btn btn-secondary" name="btnEditCancelPlayer" id="btnEditCancelPlayer">cancel</button>
            </div>
        </div>


    </div>
</div>

<h2>Result Update</h2>

<form>
    <div class="fields">
        <input type="number" id="MatchId" name="MatchId" value=0 hidden required />
        <label> Home Team: </label> <input type="text" id="HomeTeam" name="HomeTeam" required />
        <label> Opposition Team: </label> <input type="text" id="OppositionTeam" name="OppositionTeam" required />
    </div>
    <div class="fields">
        <label> Date of the Match: </label> <input type="date" id="dateOfMatch" name="dateOfMatch" />
        <label> Toss Result:</label>
        <div class="checkbox-fields">
            <input type="checkbox" id="isTossWon" name="isTossWon" value="" />Won
        </div>
    </div>
    <div class="fields">
        <label> Home Wicket Fallen: </label> <input type="number" id="homeWicketsFallen" name="homeWicketsFallen" min="0" max="10" required />
        <label> Home Score: </label> <input type="number" id="HomeTeamScore" name="HomeTeamScore" min="0" max="999" required />
    </div>
    <div class="fields">
        <label> Home Team Overs: </label> <input type="number" id="HomeTeamOvers" name="HomeTeamOvers" min="0" max="50" required />
        <label> Opposition Score: </label> <input type="number" id="oppositionScore" name="oppositionScore" min="0" max="999" required />
    </div>
    <div class="fields">
        <label> Opposition Wickets: </label> <input type="number" id="oppositionWicketsFallen" name="oppositionWicketsFallen" min="0" max="10" required />
        <label> Opposition Team Overs: </label> <input type="number" id="OppositionTeamOvers" name="OppositionTeamOvers" min="0" max="50" required />
    </div>

    <div class="fields">

        <label> Match Result: </label>
        <div class="checkbox-fields">
            <input type="checkbox" id="isWin" name="isWin" value="" />Won
        </div>
    </div>

    <button type="submit" class="btn btn-primary" name="btnSaveMatches" id="btnSaveMatches"> Submit </button>
    <button class="btn btn-warning" id="resultClear"> Clear </button>
    <button type="button" class="btn btn-info" data-toggle="modal"  data-backdrop="static" data-target="#manageMatches" id="mngMatches">
        Manage Match
    </button>
</form>

<!-- Modal -->
<div class="modal fade" id="manageMatches" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" id="modal-dialog-match"role="document">
        <div class="modal-content" id="modalMatchList">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal Match</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table id="dataTableManageMatches" data-url="@Url.Action("getMatches", controllerName)">
                    <thead class="datatable-Header">
                        <tr>
                            <td>
                                MatchId
                            </td>
                            <td>
                                Home Team
                            </td>
                            <td>
                                Opposition Team
                            </td>
                            <td>
                                DOM
                            </td>
                            <td>
                                Toss Result
                            </td>
                            <td>
                                Home Score
                            </td>
                            <td>
                                Home Wicket
                            </td>
                            <td>
                                Home Overs
                            </td>
                            <td>
                                Oppos Score
                            </td>
                            <td>
                                Oppos Overs
                            </td>
                            <td>
                                Oppos Wickets
                            </td>
                            <td>
                                Match Result
                            </td>
                            <td></td>
                            <td></td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>

                    </tbody>

                </table>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>

        @*hidden edit modal*@
        <div class="modal-content" id="modalMatchEdit" hidden>
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Edit Match</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="fields">
                    <input id="editMatchId" type="hidden" />
                    <label>Home Team: </label><input id="editHomeTeam" type="text" />
                    <label>Opposition Team: </label><input id="editOppositionTeam" type="text" />
                </div>
                <div class="fields">
                    <label>Date of Match: </label><input id="editDateofMatch" type="date" />
                    <label>Toss Result: </label><input id="editTossResult" type="checkbox" />
                </div>
                <div class="fields">
                    <label>Home Wicket Fallen: </label><input id="editHomeWicketFallen" type="number" />
                    <label>Home Score: </label><input id="editHomeScore" type="number" />
                </div>
                <div class="fields">
                    <label>Home Team Overs: </label><input id="editHomeTeamOvers" type="number" />
                    <label>Opposition Score: </label><input id="editOppositionScore" type="number" />
                </div>
                <div class="fields">
                    <label>Opposition Wickets: </label><input id="editOppositionWickets" type="number" />
                    <label>Opposition Team Overs: </label><input id="editOppositionTeamOvers" type="number" />
                </div>
                <div class="fields">
                    <label>Match Result: </label><input id="editMatchResult" type="checkbox" />
                    </div>
                </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary" name="btnEditSaveMatch" id="btnEditSaveMatch"> Save </button>
                <button type="button" class="btn btn-secondary"name="btnEditCancelMatch" id="btnEditCancelMatch">Cancel</button>
            </div>
            </div>

    </div>
</div>




<h2>performance</h2>

<form oninput="calculateEconomy(), bowlingAvg(), battingStr()">
    <div class="fields">
        <input type="hidden" value="0" id="pCounter" />
        <label> Select Player: </label> @Html.DropDownList("pList", (IEnumerable<SelectListItem>)ViewBag.listOfPlayers, new { id = "ddPlayerList", @class = "ddfield" })
        <label> Select Match: </label> @Html.DropDownList("mList", (IEnumerable<SelectListItem>)ViewBag.listOfMatches, new { id = "ddMatchList", @class = "ddfield" })
    </div>

    <div class="fields">
        <label> Runs Scored: </label> <input type="number" id="runsScored" name="runsScored" min="0" max="300" required />
        <label> Balls Faced: </label> <input type="number" id="ballFaced" name="ballFaced" min="0" max="300" required />
    </div>
    <div class="fields">
        <label> Fours: </label> <input type="number" id="Fours" name="Fours" min="0" max="75" required />
        <label> Sixes: </label> <input type="number" id="Sixes" name="Sixes" min="0" max="50" required />
    </div>
    <div class="fields">
        <label> Wickets Taken: </label> <input type="number" id="wicketsTaken" name="wicketsTaken" min="0" max="10" required />
        <label> Overs Bowled: </label> <input type="number" id="oversBowled" name="oversBowled" min="0" max="15" required />
    </div>
    <div class="fields">
        <label> Runs Conceded: </label> <input type="number" id="runConceded" name="runConceded" min="0" max="540" required />
        <label> Catches Taken: </label> <input type="number" id="Catches" name="Catches" min="0" max="10" required />
    </div>
    <div class="fields">
        <label> Run Outs: </label> <input type="number" id="runOuts" name="runOuts" min="0" max="10" required />
        <label> Batting Strike Rate: </label> <output type="number" id="BattingStrikeRate" name="BattingStrikeRate" required></output>
    </div>
    <div class="fields">
        <label> Bowling Economy: </label> <output type="number" id="BowlingEconomy" name="BowlingEconomy" required></output>
        <label> Out: </label>
        <div class="checkbox-fields">
            <input type="checkbox" id="Out" name="Out" value="" />Won
        </div>
    </div>
    <div class="fields">
        <label> Bowling Average: </label> <output type="number" id="BowlingAverage" name="BowlingAverage" required></output>
    </div>
    <button type="submit" class="btn btn-primary" name="btnSavePerformance" id="btnSavePerformance"> Submit </button>
    <button class="btn btn-warning" name="statsClear"> Clear </button>
    <button type="button" class="btn btn-info" data-toggle="modal"  data-backdrop="static" data-target="#managePerformance">
        Manage Performance
    </button>

</form>

<!-- Modal -->
<div class="modal fade" id="managePerformance" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" id="modal-dialog-performance" role="document">
        <div class="modal-content" id="modalPerformanceList">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal Performance</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table id="dataTableManagePerformance" data-url="@Url.Action("getPerformance", controllerName)">
                    <thead class="datatable-Header">
                        <tr>
                            <td>
                                PlayerId
                            </td>
                            <td>
                                MatchId
                            </td>
                            <td>
                                Runs Scored
                            </td>
                            <td>
                                Balls Faced:
                            </td>
                            <td>
                                Fours:
                            </td>
                            <td>
                                Sixes:
                            </td>
                            <td>
                                Wickets Taken:
                            </td>
                            <td>
                                Overs Bowled:
                            </td>
                            <td>
                                Runs Conceded:
                            </td>
                            <td>
                                Catches Taken:
                            </td>
                            <td>
                                Batting Strike Rate:
                            </td>
                            <td>
                                Run Outs:
                            </td>
                            <td>
                                Bowling Economy:
                            </td>
                            <td>
                                Out
                            </td>
                            <td>
                                Bowling Average:
                            </td>
                            <td></td>
                            <td></td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>

                    </tbody>

                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
        
        @*edit performance*@
        <div class="modal-content" id="modalPerformanceEdit" hidden>
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Edit Performance</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body"  oninput="calculateEconomyEdit(), bowlingAvgEdit(), battingStrEdit()">
              
                <div class="fields">
                    <input type="hidden" value="1" id="pEditCounter" />
                    <label> Select Player: </label> @Html.DropDownList("pList", (IEnumerable<SelectListItem>)ViewBag.listOfPlayers, new { id = "ddEditPlayerList", @class = "ddfield" })
                    <label> Select Match: </label> @Html.DropDownList("mList", (IEnumerable<SelectListItem>)ViewBag.listOfMatches, new { id = "ddEditMatchList", @class = "ddfield" })
                </div>
                    <div class="fields">
                        <label> Runs Scored: </label> <input type="number" id="editrunsScored" name="editrunsScored" min="0" max="300" required />
                        <label> Balls Faced: </label> <input type="number" id="editballFaced" name="editballFaced" min="0" max="300" required />
                    </div>
                    <div class="fields">
                        <label> Fours: </label> <input type="number" id="editFours" name="editFours" min="0" max="75" required />
                        <label> Sixes: </label> <input type="number" id="editSixes" name="editSixes" min="0" max="50" required />
                    </div>
                    <div class="fields">
                        <label> Wickets Taken: </label> <input type="number" id="editwicketsTaken" name="editwicketsTaken" min="0" max="10" required />
                        <label> Overs Bowled: </label> <input type="number" id="editoversBowled" name="editoversBowled" min="0" max="15" required />
                    </div>
                    <div class="fields">
                        <label> Runs Conceded: </label> <input type="number" id="editrunConceded" name="editrunConceded" min="0" max="540" required />
                        <label> Catches Taken: </label> <input type="number" id="editCatches" name="editCatches" min="0" max="10" required />
                    </div>
                    <div class="fields">
                        <label> Run Outs: </label> <input type="number" id="editrunOuts" name="editrunOuts" min="0" max="10" required />
                        <label> Batting Strike Rate: </label> <output type="number" id="editBattingStrikeRate" name="editBattingStrikeRate" required></output>
                    </div>
                    <div class="fields">
                        <label> Bowling Economy: </label> <output type="number" id="editBowlingEconomy" name="editBowlingEconomy" required></output>
                        <label> Out: </label>
                        <div class="checkbox-fields">
                            <input type="checkbox" id="editOut" name="editOut" value="" />Won
                        </div>
                    </div>
                    <div class="fields">
                        <label> Bowling Average: </label> <output type="number" id="editBowlingAverage" name="editBowlingAverage" required></output>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" name="btnEditSavePerformance" id="btnEditSavePerformance"> Save </button>
                        <button type="button" class="btn btn-secondary" name="btnEditCancelPerformance" id="btnEditCancelPerformance">Cancel</button>
                    </div>
                    
            </div>
        </div>
    </div>
</div>

<h2>News Update</h2>

<form>
    <div class="fields">
        <label> Title: </label> <input type="text" id="Title" placeholder="" required />
        <label> Image: </label> <input type="text" id="Image" placeholder="" required />
    </div>
    <div class="fields">
        <label> Article: </label> <textarea id="Article" placeholder="Type aricle here..." required></textarea>
    </div>
    <button class="btn btn-primary" id="newsSubmit"> Submit </button>
    <button class="btn btn-warning" id="newsClear"> Clear </button>
    <button class="btn btn-info" id="managePlayer"> Manage </button>
</form>

<script>

    $(document).ready(function () {

        function jsonDateConvert(jsonDate) {
            var dateString = jsonDate.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = currentTime.getMonth() + 1;
            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            var date = day + "/" + month + "/" + year;
            return date;
        }
        function toTypeDate(rawDate) { 
            var rawDate = new Date();

            var day = ("0" + rawDate.getDate()).slice(-2);
            var month = ("0" + (rawDate.getMonth() + 1)).slice(-2);

           return rawDate.getFullYear() + "-" + (month) + "-" + (day);
            
        }

        $("#btnSavePlayer").on("click", function (e) {
            var id = 0;
            var name = $('#playerName').val();
            e.preventDefault();
            SavePlayer(id, name);

        });

        $("#btnSaveMatches").on("click", function (e) {

            e.preventDefault();
            var id = 0;
            var ht = $("#HomeTeam").val();
            var ot = $("#OppositionTeam").val();
            var dom = $("#dateOfMatch").val();
            var tr = $("#isTossWon").prop("checked");
            var hts = $("#HomeTeamScore").val();
            var hwt = $("#homeWicketsFallen").val();
            var hto = $("#HomeTeamOvers").val();
            var os = $("#oppositionScore").val();
            var otw = $("#oppositionWicketsFallen").val();
            var oto = $("#OppositionTeamOvers").val();
            var mr = $("#isWin").prop("checked");
            e.preventDefault();
            SaveMatches(id, ht, ot, dom, tr, hwt, hts, hto, os, otw, oto, mr);
        

        });

        $("#btnSavePerformance").on("click", function (e) {
            var pCounter = $("pCounter").val();
            var PId = $("#ddPlayerList").val();
            var MId = $("#ddMatchList").val();
            var runsScored = $("#runsScored").val();
            var ballsFaced = $("#ballFaced").val();
            var Fours = $("#Fours").val();
            var Sixes = $("#Sixes").val();
            var wicketsTaken = $("#wicketsTaken").val();
            var oversBowled = $("#oversBowled").val();
            var runConceded = $("#runConceded").val();
            var Catches = $("#Catches").val();
            var runOuts = $("#runOuts").val();
            var BattingStrikeRate = $("#BattingStrikeRate").val();
            var BowlingEconomy = $("#BowlingEconomy").val();
            var Out = $("#Out").prop("checked");
            var BowlingAverage = $("#BowlingAverage").val();
            e.preventDefault();
            SavePerformance(pCounter, PId, MId, runsScored, ballsFaced, Fours, Sixes, wicketsTaken, oversBowled, runConceded, Catches, runOuts, BattingStrikeRate, BowlingEconomy, Out, BowlingAverage);

        });


        //loadPlayer
        var dataArray = [];
        var table = $('#dataTableManagePlayer').DataTable({
            data: dataArray,
            searching: false,

            columns: [{ data: 'PlayerId' }, { data: 'PlayerName' },
                {
                    data: function (data) {
                        var html = '';
                        html += 'Edit';
                        return html;
                    },
                    'className': 'edit-player'

                },
                {
                    data: function (data) {
                        var html = '';
                        html += 'Delete';
                        return html;
                    },
                    'className': 'delete-player'
                }]

        });

        $("#dataTableManagePlayer").on("click", 'td.edit-player', function (e) {
            //alert("test");
            e.preventDefault();
            editplayer($(this).closest('tr'));
            $("#modalPlayerList").hide();
            $("#modalPlayerEdit").show();

        });

        $("#dataTableManagePlayer").on("click", 'td.delete-player', function (e) {
            //alert("test");
            e.preventDefault();
            deleteplayer($(this).closest('tr'));
           

        });

        function deleteplayer(tablerow) {

            var rowData = $("#dataTableManagePlayer").DataTable().row(tablerow).data();
    
            $.ajax({
                type: "post",
                data: {
                    PlayerId: rowData.PlayerId
                },
                url: '@Url.Action("DeletePlayer")',
                success: function (data) {
                    if (data === "1") {
                        LoadPlayers(table);
                        LoadPerformance(table2);
                    } 

                },
                error: function (data) {
                    if (data === "0")
                        alert("delete failed");
                }
            });
        }

        function editplayer(tablerow) {

            var rowData = $("#dataTableManagePlayer").DataTable().row(tablerow).data();

            $("#editPlayerId").val(rowData.PlayerId);
            $("#editPlayerName").val(rowData.PlayerName);
            //alert(playerId);
        }
        $("#btnEditSavePlayer").on("click", function (e) {
            var id = $("#editPlayerId").val();
            var name = $("#editPlayerName").val();
            e.preventDefault();
            SavePlayer(id, name);

        });
        $("#mngPlayer").on("click", function (e) {
            $("#modalPlayerEdit").hide();
            $("#modalPlayerList").show();
        }); 

        $("#btnEditCancelPlayer").on("click", function (e) {
            $("#modalPlayerEdit").hide();
            $("#modalPlayerList").show();
        }); 

        LoadPlayers(table);


        function LoadPlayers(table) {


            var temp = [];
            var urlstr = $('#dataTableManagePlayer').attr('data-url');
            $.ajax({
                type: "Get",
                async: true,
                url: urlstr,
                data: JSON.stringify({}),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                deferRender: true,
                success: function (data) {

                    dataArray = eval('(' + JSON.stringify(data) + ')');

                },
                error: function (request, error) {
                    alert("Players not found");
                },
                complete: function () {
                    table.clear();
                    table.rows.add(dataArray).draw();
                }
            });
        }


        //loadMatch
        var dataArrayMatch = [];
        var table1 = $('#dataTableManageMatches').DataTable({
            data: dataArrayMatch,
            searching: false,

            columns: [{ data: 'MatchId' },
                { data: 'HomeTeam' },
                { data: 'OppositionTeam' },                
                {
                    data: function (data) {
                        return jsonDateConvert(data.DateOfMatch);
                    }
                },
                //{ data: 'isTossWin' },
                {
                    data: function (data) {
                        var html = '';
                        if (data.isTossWin == true)
                            html += 'Yes';
                        else
                            html += 'No';
                        return html;
                    }
                },
                { data: 'HomeScore' },
                { data: 'HomeTeamOvers' },
                { data: 'HomeWicketsFallen' },
                { data: 'OppositionScore' },
                { data: 'OppositionTeamOvers' },
                { data: 'OppositionWicketsFallen' },
                {
                    data: function (data) {
                        var html = '';
                        if (data.isWin == true)
                            html += 'Won';
                        else
                            html += 'Lost';
                        return html;
                    }
                },
                {
                    data: function (data) {
                        var html = '';
                        html += 'Edit';
                        return html;
                    },
                    'className': 'edit-match'

                },
                {
                    data: function (data) {
                        var html = '';
                        html += 'Delete';
                        return html;
                    },
                    'className': 'delete-match'
                }]

        });

        $("#dataTableManageMatches").on("click", 'td.edit-match', function (e) {
            //alert("test");
            e.preventDefault();
            editMatch($(this).closest('tr'));
            $("#modalMatchList").hide();
            $("#modalMatchEdit").show();

        });

        $("#dataTableManageMatches").on("click", 'td.delete-match', function (e) {
            //alert("test");
            e.preventDefault();
            deleteMatch($(this).closest('tr'));
        });


          function deleteMatch(tablerow) {
            var rowData = $("#dataTableManageMatches").DataTable().row(tablerow).data();
          
            $.ajax({
                type: "post",
                data: {
                    MatchId: rowData.MatchId
                },
                url: '@Url.Action("DeleteMatch")',
                success: function (data) {
                    if (data === "1") {
                        LoadMatches(table1);
                        LoadPerformance(table2);
                    } 

                },
                error: function (data) {
                    if (data === "0")
                        alert("delete failed");
                }
            });

        }


        function editMatch(tablerow) {
            var rowData = $("#dataTableManageMatches").DataTable().row(tablerow).data();
           
            $("#editMatchId").val(rowData.MatchId);
            $("#editHomeTeam").val(rowData.HomeTeam);
            $("#editOppositionTeam").val(rowData.OppositionTeam);
            $("#editDateofMatch").val(toTypeDate(rowData.DateOfMatch));
            if (rowData.isTossWin)
                $("#editTossResult").prop("checked", true);
            else
                $("#editTossResult").prop("checked", false);
            $("#editHomeWicketFallen").val(rowData.HomeWicketsFallen);
            $("#editHomeScore").val(rowData.HomeScore);
            $("#editHomeTeamOvers").val(rowData.HomeTeamOvers);
            $("#editOppositionScore").val(rowData.OppositionScore);
            $("#editOppositionWickets").val(rowData.OppositionWicketsFallen);
            $("#editOppositionTeamOvers").val(rowData.OppositionTeamOvers);
            if (rowData.isWin)
                $("#editMatchResult").prop("checked", true);
            else
                $("#editMatchResult").prop("checked", false);
          
        }
        $("#btnEditSaveMatch").on("click", function (e) {
            var id = $("#editMatchId").val();
            var ht = $("#editHomeTeam").val();
            var ot = $("#editOppositionTeam").val();
            var dom = $("#editDateofMatch").val();
            var tr = $("#editTossResult").prop("checked");
            var hts = $("#editHomeScore").val();
            var hwt = $("#editHomeWicketFallen").val();
            var hto = $("#editHomeTeamOvers").val();
            var os = $("#editOppositionScore").val();
            var otw = $("#editOppositionWickets").val();
            var oto = $("#editOppositionTeamOvers").val();
            var mr = $("#editMatchResult").prop("checked");
            e.preventDefault();
            SaveMatches(id, ht, ot, dom, tr, hwt, hts, hto, os, otw,oto, mr);

        });
        $("#mngMatches").on("click", function (e) {
            $("#modalMatchEdit").hide();
            $("#modalMatchList").show();
        }); 

        $("#btnEditCancelMatch").on("click", function (e) {
            $("#modalMatchEdit").hide();
            $("#modalMatchList").show();
        }); 


        LoadMatches(table1);


        function LoadMatches(table) {


            //var temp = [];
            var urlstr = $('#dataTableManageMatches').attr('data-url');
            $.ajax({
                type: "Get",
                async: true,
                url: urlstr,
                data: JSON.stringify({}),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                deferRender: true,
                success: function (data) {

                    dataArrayMatch = eval('(' + JSON.stringify(data) + ')');

                },
                error: function (request, error) {
                    alert("Matches not found");
                },
                complete: function () {
                    table.clear();
                    table.rows.add(dataArrayMatch).draw();
                }
            });
        }


        //loadPerformance
        var dataArrayPerformance = [];
        var table2 = $('#dataTableManagePerformance').DataTable({
            data: dataArrayPerformance,
            searching: false,

            columns: [{ data: 'PlayerId' },
                { data: 'MatchId' },
                { data: 'runsScored' },
                { data: 'ballsFaced' },
                { data: 'Fours' },
                { data: 'Sixes' },
                { data: 'wicketsTaken' }, 
                { data: 'oversBowled' },
                { data: 'runConceded' },
                { data: 'Catches' },
                { data: 'BattingStrikeRate' }, 
                { data: 'runOuts' },
                { data: 'BowlingEconomy' },
                {
                    data: function (data) {
                        var html = '';
                        if (data.Out == true)
                            html += 'Out';
                        else
                            html += 'Not Out';
                        return html;
                    }
                },
                { data: 'BowlingAverage' },
                {
                    data: function (data) {
                        var html = '';
                        html += 'Edit';
                        return html;
                    },
                    'className': 'edit-performance'
    
                },
                {
                    data: function (data) {
                        var html = '';
                        html += 'Delete';
                        return html;
                    },
                    'className': 'delete-performance'
                }]

        });



        $("#dataTableManagePerformance").on("click", 'td.edit-performance', function (e) {
            e.preventDefault();
            editPerformance($(this).closest('tr'));
            $("#modalPerformanceList").hide();
            $("#modalPerformanceEdit").show();

        });

        $("#dataTableManagePerformance").on("click", 'td.delete-performance', function (e) {
            e.preventDefault();
           deletePerformance($(this).closest('tr'));
           

        });

        function deletePerformance(tablerow) {
            var rowData = $("#dataTableManagePerformance").DataTable().row(tablerow).data();
          
            $.ajax({
                type: "post",
                data: {
                    PlayerId: rowData.PlayerId,
                    MatchId: rowData.MatchId

                },
                url: '@Url.Action("DeletePerformance")',
                success: function (data) {
                    if (data === "1") {
                        LoadPerformance(table2);
                    } 

                },
                error: function (data) {
                    if (data === "0")
                        alert("delete failed");
                }
            });

        }

        function editPerformance(tablerow) {

            var rowData = $("#dataTableManagePerformance").DataTable().row(tablerow).data();
            $("#pCounter").val(rowData.pCounter);
            $('#ddEditPlayerList').val(rowData.PlayerId);
            $('#ddEditMatchList').val(rowData.MatchId);
            $('#editrunsScored').val(rowData.runsScored);
            $('#editballFaced').val(rowData.ballsFaced);
            $('#editFours').val(rowData.Fours);
            $('#editSixes').val(rowData.Sixes);
            $('#editwicketsTaken').val(rowData.wicketsTaken);
            $('#editoversBowled').val(rowData.oversBowled);
            $('#editrunConceded').val(rowData.runsScored);
            $('#editCatches').val(rowData.Catches);
            $('#editrunOuts').val(rowData.runOuts);
            $('#editBattingStrikeRate').val(rowData.BattingStrikeRate);
            $('#editBowlingEconomy').val(rowData.BowlingEconomy);
                if (rowData.Out)
                    $("#editOut").prop("checked", true);
                else
                    $("#editOut").prop("checked", false);
            $('#editBowlingAverage').val(rowData.BowlingAverage);
           
        }

        $("#btnEditSavePerformance").on("click", function (e) {
            var pCounter = $("#pEditCounter").val();
            var PId = $("#ddEditPlayerList").val();
            var MId = $("#ddEditMatchList").val();
            var runsScored = $("#editrunsScored").val();
            var ballsFaced = $("#editballFaced").val(); 
            var Fours = $("#editFours").val();
            var Sixes = $("#editSixes").val();
            var wicketsTaken = $("#editwicketsTaken").val();
            var oversBowled = $("#editoversBowled").val();
            var runConceded = $("#editrunConceded").val();
            var Catches = $("#editCatches").val();
            var runOuts = $("#editrunOuts").val();
            var BattingStrikeRate = $("#editBattingStrikeRate").val();
            var BowlingEconomy = $("#editBowlingEconomy").val();
            var Out = $("#editOut").prop("checked");
            var BowlingAverage = $("#editBowlingAverage").val();
            e.preventDefault();
            SavePerformance(pCounter, PId, MId, runsScored, ballsFaced, Fours, Sixes, wicketsTaken, oversBowled, runConceded, Catches, runOuts, BattingStrikeRate, BowlingEconomy, Out, BowlingAverage)

        });

        $("#mngPerformance").on("click", function (e) {
            $("#modalPerformanceEdit").hide(); 
            $("#modalPerformanceList").show();

        }); 
        $("#btnEditCancelPerformance").on("click", function (e) {
            $("#modalPerformanceEdit").hide();
            $("#modalPerformanceList").show();

        }); 


        LoadPerformance(table2);


        function LoadPerformance(table) {


            //var temp = [];
            var urlstr = $('#dataTableManagePerformance').attr('data-url');
            $.ajax({
                type: "Get",
                async: true,
                url: urlstr,
                data: JSON.stringify({}),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                deferRender: true,
                success: function (data) {

                    dataArrayPerformance = eval('(' + JSON.stringify(data) + ')');

                },
                error: function (request, error) {
                    alert("Performance not found");
                },
                complete: function () {
                    table.clear();
                    table.rows.add(dataArrayPerformance).draw();
                }
            });
        }



      




        function SavePlayer(id, name) {
          

            $.ajax({
                type: "post",
                data: {
                    PlayerId: id,
                    PlayerName: name

                },
                url: '@Url.Action("SavePlayer")',
                success: function (data) {
                    if (data === "1") {
                        alert("Player Name Saved");
                        window.location = '@Url.Action("AdminMain","Admin")';
                    } else if (data === "2") {
                        alert("Player Name Already Exist");
                        window.location = '@Url.Action("AdminMain","Admin")';
                    }

                },
                error: function (data) {
                    if (data === "0")
                        alert("Player Name Save Failed");
                }
            })

        }


        function SaveMatches(id, Hometeam, OppositeTeam, dateOfMatch, isTossWon, homeWicketsFallen, homeScore, homeTeamOvers, oppositeScore, oppositionWicketsFallen, OppositeTeamOvers, isWin ) {
            //var input = $('#player-performance').find("input,select,textarea").serialize();
           
            $.ajax({
               
                type: "post",
                data: {

                    MatchId: id,
                    HomeTeam: Hometeam,
                    OppositionTeam: OppositeTeam,
                    DateOfMatch: dateOfMatch,
                    isTossWon: isTossWon,
                    HomeScore: homeScore,
                    HomeWicketsFallen: homeWicketsFallen,
                    HomeTeamOvers: homeTeamOvers,
                    OppositionScore: oppositeScore,
                    OppositionWicketsFallen: oppositionWicketsFallen,
                    OppositionTeamOvers: OppositeTeamOvers,
                    isWin: isWin

                    //MatchId: $('#MatchId').val(),
                    //HomeTeam: $('#HomeTeam').val(),
                    //OppositionTeam: $('#OppositionTeam').val(),
                    //dateOfMatch: $('#dateOfMatch').val(),
                    //isTossWon: $('#isTossWon').prop("checked"),
                    //homeWicketsFallen: $('#homeWicketsFallen').val(),
                    //homeScore: $('#homeScore').val(),
                    //HomeTeamOvers: $('#HomeTeamOvers').val(),
                    //oppositionScore: $('#oppositionScore').val(),
                    //oppositionWicketsFallen: $('#oppositionWicketsFallen').val(),
                    //OppositeTeamOvers: $('#OppositionTeamOvers').val(),
                    //isWin: $('#isWin').prop("checked")

                },
                url: '@Url.Action("SaveMatch")',
                success: function (data) {
                    if (data === "1") {
                        alert("Match Saved");
                        window.location = '@Url.Action("AdminMain","Admin")';
                    } else if (data === "2") {
                        alert("Match Entry Already Exist");
                        window.location = '@Url.Action("AdminMain","Admin")';
                    }

                },
                error: function (data) {
                    if (data === "0")
                        alert("Match Save Failed");
                }
            })

        }


        function SavePerformance(pCounter, PId, MId, runsScored, ballsFaced, Fours, Sixes, wicketsTaken, oversBowled, runConceded, Catches, runOuts, BattingStrikeRate, BowlingEconomy, Out, BowlingAverage) {
            //var input = $('#player-performance').find("input,select,textarea").serialize();
            

            $.ajax({

                type: "post",
                data: {
                    pCounter: pCounter,
                    PlayerId: PId ,
                    MatchId: MId ,
                    runsScored: runsScored,
                    ballsFaced: ballsFaced,
                    Fours: Fours,
                    Sixes: Sixes,
                    wicketsTaken: wicketsTaken,
                    oversBowled: oversBowled,
                    runConceded: runConceded,
                    Catches: Catches,
                    runOuts: runOuts,
                    BattingStrikeRate: BattingStrikeRate,
                    BowlingEconomy: BowlingEconomy,
                    Out: Out,
                    BowlingAverage: BowlingAverage

                },
                url: '@Url.Action("SavePerformance")',
                success: function (data) {
                    if (data === "1") {
                        alert("Performance Saved");
                        window.location = '@Url.Action("AdminMain","Admin")';
                    }

                },
                error: function (data) {
                    if (data === "0") {
                        alert("Save Failed");
                        window.location = '@Url.Action("AdminMain","Admin")';
                    }
                }
            })

        }

    });

    //arithmetic operation
    function calculateEconomy() {
        var runConceded = document.getElementById('runConceded').value;
        var oversBowled = document.getElementById('oversBowled').value;

        var Economy = runConceded / oversBowled;
        document.getElementById('BowlingEconomy').value = Economy.toFixed(0);

    }

    function calculateEconomyEdit() {
        var runConceded = document.getElementById('editrunConceded').value;
        var oversBowled = document.getElementById('editoversBowled').value;

        var Economy = runConceded / oversBowled;
        document.getElementById('editBowlingEconomy').value = Economy.toFixed(0);

    }

    function bowlingAvg() {
        var runConceded = document.getElementById('runConceded').value;
        var wicketsTaken = document.getElementById('wicketsTaken').value;

        var bowlingavg = runConceded / wicketsTaken;
        document.getElementById('BowlingAverage').value = bowlingavg.toFixed(0);

    }

    function bowlingAvgEdit() {
        var runConceded = document.getElementById('editrunConceded').value;
        var wicketsTaken = document.getElementById('editwicketsTaken').value;

        var bowlingavg = runConceded / wicketsTaken;
        document.getElementById('editBowlingAverage').value = bowlingavg.toFixed(0);

    }


    function battingStr() {
        var runsScored = document.getElementById('runsScored').value;
        var ballFaced = document.getElementById('ballFaced').value;

        var battingStrikeRate = (runsScored / ballFaced) * 100;
        document.getElementById('BattingStrikeRate').value = battingStrikeRate.toFixed(0);

    }

    function battingStrEdit() {
        var runsScored = document.getElementById('editrunsScored').value;
        var ballFaced = document.getElementById('editballFaced').value;

        var battingStrikeRate = (runsScored / ballFaced) * 100;
        document.getElementById('editBattingStrikeRate').value = battingStrikeRate.toFixed(0);

    }

</script>


